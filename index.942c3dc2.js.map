{"mappings":"AAAkBA,SAASC,cAAc,UAEtBD,SAASC,cAAc,WAE1BD,SAASC,cAAc,aCDvC,MAAMC,EAAYF,SAASC,cAAc,UACnCE,EAAaH,SAASC,cAAc,WACpCG,EAAUJ,SAASC,cAAc,aACjCI,EAASL,SAASC,cAAc,iBAEtCC,EAAUI,YAAc,GACxBJ,EAAUK,MAAMC,QAAU,OAC1BH,EAAOE,MAAME,WAAa,SAE1B,IAAIC,EAAe,GAuFnB,SAASC,IACLR,EAAWI,MAAMC,QAAU,OAC3BL,EAAWG,YAAc,GACzBJ,EAAUI,YAAc,sDACxBJ,EAAUK,MAAMC,QAAU,O,CAG9BH,EAAOO,iBAAiB,UAlExB,W,IAC8BC,EAC1B,GADiF,QAAvDA,EAAAH,EAAaI,MAAKC,GAAwB,eAAfA,EAAMC,cAAsB,IAAvDH,OAAA,EAAAA,EAAyDI,GAMnF,OAAOC,MAAMC,IAAK,CACdC,QAAS,CACL,YDzCW,2EC4CdC,MAAMC,IACH,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAE7B,OAAOH,EAASI,MAAM,IAEzBL,MAAMM,IACH,IAAIV,EAAKZ,EAAOuB,cACTlB,EAAaO,GAMhC,WACI,IAAIA,EAAKZ,EAAOuB,cAEZlB,EAAamB,OAAS,IACtBzB,EAAQ0B,UAAY,IAExB,MAAMC,EAAQ/B,SAASgC,cAAc,OAC/BC,EAAQjC,SAASgC,cAAc,MAC/BE,EAAclC,SAASgC,cAAc,KACrCG,EAAcnC,SAASgC,cAAc,MAE3CD,EAAMxB,MAAMC,QAAU,QACtBuB,EAAMK,IAAM,GAAG1B,EAAaO,GAAIc,MAAMZ,MACtCY,EAAMxB,MAAM8B,MAAQ,QACpBN,EAAMxB,MAAM+B,OAAS,QACrBP,EAAMxB,MAAMgC,eAAiB,QAE7BN,EAAM3B,YAAc,GAAGI,EAAaO,GAAID,OACxCiB,EAAM1B,MAAMiC,SAAW,OACvBP,EAAM1B,MAAMkC,aAAe,EAC3BR,EAAM1B,MAAMmC,gBAAkB,qBAE9BR,EAAY5B,YAAc,GAAGI,EAAaO,GAAIiB,cAC9CA,EAAY3B,MAAMiC,SAAW,OAE7BL,EAAY7B,YAAc,gBAAgBI,EAAaO,GAAIkB,cAC3DA,EAAY5B,MAAMiC,SAAW,OAC7BL,EAAY5B,MAAMoC,UAAY,EAE9BvC,EAAQ0B,UAAY,GACpB1B,EAAQwC,OAAOb,EAAOE,EAAOC,EAAaC,E,CAnClCU,EAAc,IAEjBC,OAAOC,GAAUpC,MApBlBA,G,IA5BJR,EAAWI,MAAMC,QAAU,QDJpBU,MALI,sCAKS,CAACE,QAAS,CAC9B,YAJmB,2EAMdC,MAAMC,IACP,IAAKA,EAASC,GACd,MAAM,IAAIC,MAAMF,EAASG,QAEzB,OAAOH,EAASI,MAAM,ICDrBL,MAAMM,IACHA,EAAOA,EAAKqB,QAAOC,I,IAAOpC,EAAA,OAAkB,OAAT,QAATA,EAAAoC,EAAIlB,aAAK,IAATlB,OAAA,EAAAA,EAAWM,IAAW,IAChDT,EAAeiB,EAEf,IAAK,IAAIuB,EAAI,EAAGA,EAAIxC,EAAamB,OAAQqB,IAAK,CAC1C,MAAMnC,EAAQL,EAAawC,GAC3B,IAAKnC,EAAMgB,MAAO,SAClB,IAAIoB,EAASnD,SAASgC,cAAc,UACpCmB,EAAOC,MAAQrC,EAAME,GACrBkC,EAAOrB,UAAY,GAAGf,EAAMC,OAC5BX,EAAOgD,YAAYF,E,CAGvB9C,EAAOE,MAAME,WAAa,UAC1BN,EAAWI,MAAMC,QAAU,MAAM,IAEpCsC,OAAOC,IACJ5C,EAAWI,MAAMC,QAAU,OAC3BG,IACA2C,QAAQP,MAAMA,EAAM","sources":["src/cat-api.js","src/app.js"],"sourcesContent":["const errorItem = document.querySelector('.error');\n\nconst loaderItem = document.querySelector('.loader');\n\nconst catInfo = document.querySelector('.cat-info')\n\nconst breeds = `https://api.thecatapi.com/v1/breeds`;\n\nexport const api_key = \"live_CIw3lZRkcpgh759C9YBXivIvAETipzFqRyXtOHa4sXukf5xIGdNG9JZOQ72DPlKH\"\n\nexport function fetchBreeds() {\n    return fetch(breeds,{headers: {\n    'x-api-key': api_key\n    }})\n        .then((response) => {\n        if (!response.ok) {\n        throw new Error(response.status);\n        }\n        return response.json();\n        })\n};","import './style.css';\nimport { fetchBreeds, api_key } from \"./cat-api\";\n\nconst errorItem = document.querySelector('.error');\nconst loaderItem = document.querySelector('.loader');\nconst catInfo = document.querySelector('.cat-info');\nconst select = document.querySelector('.breed-select');\n\nerrorItem.textContent = '';\nerrorItem.style.display = 'none';\nselect.style.visibility = 'hidden';\n\nlet storedBreeds = [];\n\nfunction onLoader() {\n    loaderItem.style.display = 'block';\n    fetchBreeds()\n        .then((data) => {\n            data = data.filter(img => img.image?.url != null)\n            storedBreeds = data;\n        \n            for (let i = 0; i < storedBreeds.length; i++) {\n                const breed = storedBreeds[i];\n                if (!breed.image) continue;\n                let option = document.createElement('option');\n                option.value = breed.id;\n                option.innerHTML = `${breed.name}`;\n                select.appendChild(option);\n            }\n            \n            select.style.visibility = 'visible';\n            loaderItem.style.display = 'none';\n        })\n        .catch((error) => {\n            loaderItem.style.display = 'none';\n            errorMessage();\n            console.error(error);\n        });\n};\n\nfunction fetchCatByBreed() {\n    const abyssinianBreedId = storedBreeds.find(breed => breed.name === 'Abyssinian')?.id;\n    if (!abyssinianBreedId) {\n        errorMessage();\n        return;\n    }\n\n    return fetch(url, {\n        headers: {\n            'x-api-key': api_key\n        }\n    })\n        .then((response) => {\n            if (!response.ok) {\n                throw new Error(response.status);\n            } \n            return response.json();\n        })\n        .then((data) => {\n            let id = select.selectedIndex\n            data = storedBreeds[id];\n            renderBreeds(); \n        })\n        .catch((error) => errorMessage());\n};\n\nfunction renderBreeds() { \n    let id = select.selectedIndex;\n\n    if (storedBreeds.length > 1) {\n        catInfo.innerHTML = '';\n    }\n    const image = document.createElement('img');\n    const title = document.createElement('h2');\n    const description = document.createElement('p');\n    const temperament = document.createElement('h3');\n\n    image.style.display = 'block';\n    image.src = `${storedBreeds[id].image.url}`;\n    image.style.width = `${700}px`;\n    image.style.height = `${600}px`;\n    image.style.backgroundSize = 'cover';\n\n    title.textContent = `${storedBreeds[id].name}`;\n    title.style.fontSize = `${38}px`;\n    title.style.marginBottom = 0;\n    title.style.backgroundColor = 'rgb(255, 255, 255)';\n\n    description.textContent = `${storedBreeds[id].description}`;\n    description.style.fontSize = `${24}px`;\n    \n    temperament.textContent = `Temperament: ${storedBreeds[id].temperament}`;\n    temperament.style.fontSize = `${28}px`;\n    temperament.style.marginTop = 0;\n\n    catInfo.innerHTML = '';\n    catInfo.append(image, title, description, temperament);\n};\n\nfunction errorMessage() {\n    loaderItem.style.display = 'none';\n    loaderItem.textContent = '';\n    errorItem.textContent = 'Oops! Something went wrong! Try reloading the page!';\n    errorItem.style.display = 'block';\n};\n\nselect.addEventListener('change', fetchCatByBreed);\n\nonLoader();\n"],"names":["document","querySelector","$6f40c3a58f594b58$var$errorItem","$6f40c3a58f594b58$var$loaderItem","$6f40c3a58f594b58$var$catInfo","$6f40c3a58f594b58$var$select","textContent","style","display","visibility","$6f40c3a58f594b58$var$storedBreeds","$6f40c3a58f594b58$var$errorMessage","addEventListener","ref","find","breed","name","id","fetch","url","headers","then","response","ok","Error","status","json","data","selectedIndex","length","innerHTML","image","createElement","title","description","temperament","src","width","height","backgroundSize","fontSize","marginBottom","backgroundColor","marginTop","append","$6f40c3a58f594b58$var$renderBreeds","catch","error","filter","img","i","option","value","appendChild","console"],"version":3,"file":"index.942c3dc2.js.map"}